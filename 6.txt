from sklearn.metrics import accuracy_score,confusion_matrix,precision_score,recall_score
from sklearn.naive_bayes import MultinomialNB
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
import pandas as pd

msg = pd.read_csv('nbc.csv',names=['message','label'],encoding='cp1252')
print("total instances of dataset:",msg.shape[0])
msg['labelnum']=msg.label.map({'pos':1,'neg':0})

X=msg.message
y=msg.labelnum

Xtrain, Xtest, ytrain, ytest=train_test_split(X,y)

count_v=CountVectorizer()
Xtrain_dm = count_v.fit_transform(Xtrain)
Xtest_dm = count_v.transform(Xtest)

df=pd.DataFrame(Xtrain_dm.toarray(),columns=count_v.get_feature_names())
print(df[0:5])

clf = MultinomialNB()
clf.fit (Xtrain_dm,ytrain)
pred = clf.predict(Xtest_dm)

for doc,p in zip(Xtrain,pred):
    p= 'pos' if p==1 else 'neg'
    print("%s ->%s"%(doc,p))
    
print('Accuracy metrics:\n')
print('accuracy:',accuracy_score(ytest, pred))
print('recall:',recall_score(ytest, pred))
print('precision:',precision_score(ytest, pred))
print('confusion martix:',confusion_matrix(ytest, pred))
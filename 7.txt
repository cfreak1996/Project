import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans
import pandas as pd
import numpy as np

iris=datasets.load_iris()
X=pd.DataFrame(iris.data)
X.columns = ['sepal_length','sepal_width','petal_length','petal_width']
y = pd.DataFrame(iris.target)
y.columns = ['target'] 

model = KMeans(n_clusters=3)
model.fit(X)

plt.figure(figsize =(14,7))
colormap = np.array (['red','lime','black'])

plt.subplot(1,3,1)
plt.scatter(X.petal_length,X.petal_width,c=colormap[y.target],s=40)
plt.title('red cluster')
plt.xlabel('petal length')
plt.ylabel('petal width')

plt.subplot(1,3,2)
plt.scatter(X.petal_length,X.petal_width,c=colormap[model.labels_],s=40)
plt.title('Kmeans cluster')
plt.xlabel('petal length')
plt.ylabel('petal width')

from sklearn import preprocessing
scaler = preprocessing.StandardScaler()
scaler.fit(X)
xsa =scaler.transform(X)
xs =pd.DataFrame(xsa,columns=X.columns)
from sklearn.mixture import GaussianMixture
gmm=GaussianMixture(n_components=40)
gmm.fit(xs)
plt.subplot(1,3,3)
plt.scatter(X.petal_length,X.petal_width,c=colormap[0],s=40)
plt.title('gmm clustering')
plt.xlabel('petal length')
plt.ylabel('petal width')

print('observation : the gmm using em algo based clustering matchhed the true labels more closely than kmeans')